{"version":3,"sources":["components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","services/pixabayApi.js","App.js","index.js"],"names":["Button","onClick","type","className","ImageGalleryItem","src","srcLarge","data-source","alt","ImageGallery","items","children","map","id","webformatURL","largeImageURL","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Component","Searchbar","state","query","handleChange","setState","value","handleSubmit","preventDefault","onSubmit","onChange","autoComplete","autoFocus","placeholder","PixabayApi","fetchImg","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","App","images","isLoading","error","showModal","largeImg","handleOpenModal","e","dataset","source","handleCloseModal","onChangeQuery","fetchImages","options","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProps","prevState","shouldRenderBtn","length","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba932afc.chunk.js","sourcesContent":["const Button = ({ onClick, type = \"button\" }) => {\r\n  return (\r\n    <button onClick={onClick} className=\"Button\" type={type}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","const ImageGalleryItem = ({ src, srcLarge, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img\r\n        src={src}\r\n        data-source={srcLarge}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ items, onClick, children }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {items.map(({ id, webformatURL, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            onClick={onClick}\r\n            key={id}\r\n            src={webformatURL}\r\n            srcLarge={largeImageURL}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\nexport default ImageGallery;\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = (event) => {\r\n    const { currentTarget, target } = event;\r\n    if (currentTarget === target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div onClick={this.handleBackdropClick} className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img className=\"Modal-img\" src={this.props.src} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      query: event.currentTarget.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst fetchImg = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=20619002-8fc642db62a2cbb864bfebfc1&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nconst PixabayApi = { fetchImg };\r\n\r\nexport default PixabayApi;\r\n","import { Component } from \"react\";\nimport ReactLoading from \"react-loading\";\nimport Button from \"./components/Button/Button\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal/Modal\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport PixabayApi from \"./services/pixabayApi\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n    showModal: false,\n    largeImg: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n  handleOpenModal = (e) => {\n    this.setState({\n      showModal: true,\n      largeImg: e.target.dataset.source,\n    });\n  };\n  handleCloseModal = () => {\n    this.setState({\n      showModal: false,\n      largeImg: \"\",\n    });\n  };\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    this.setState({ isLoading: true });\n    const options = {\n      currentPage: currentPage,\n      searchQuery: searchQuery,\n    };\n    PixabayApi.fetchImg(options)\n      .then((data) => {\n        this.setState(({ images, currentPage }) => ({\n          images: [...images, ...data],\n          currentPage: currentPage + 1,\n        }));\n      })\n      .then(() => {\n        if (currentPage > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((e) => this.setState({ error: e }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n  render() {\n    const { images, isLoading, showModal, largeImg } = this.state;\n    const shouldRenderBtn = images.length > 0 && !isLoading;\n    return (\n      <>\n        <div className=\"App\">\n          <Searchbar onSubmit={this.onChangeQuery} />\n          <ImageGallery onClick={this.handleOpenModal} items={images}>\n            {isLoading && (\n              <ReactLoading\n                className=\"spinner\"\n                type=\"spin\"\n                color=\"#303f9f\"\n                height={50}\n                width={50}\n              />\n            )}\n            {shouldRenderBtn && <Button onClick={this.fetchImages} />}\n          </ImageGallery>\n          {showModal && (\n            <Modal onClose={this.handleCloseModal} src={largeImg} />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}